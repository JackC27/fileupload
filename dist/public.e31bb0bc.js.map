{"version":3,"sources":["components/formdataupload/formdataupload.jsx","components/formupload/formupload.jsx","index.js"],"names":["fdUpload","props","handleChange","fileUploadHandler","module","exports","useForm","console","log","FormDataConatiner","require","FormConatiner","Test","state","uploaded","file","filename","bind","fd","FormData","append","name","fetch","method","data","body","then","res","setState","catch","e","event","target","files","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"public.e31bb0bc.js","sourceRoot":"../public","sourcesContent":["import React, { Component } from \"react\";\n\nfunction fdUpload(props){\n  return (\n    <div id=\"formDataUploadContainer\">\n      <h2>Upload Using Form Data</h2>\n      <input onChange={props.handleChange} type=\"file\" name=\"image201\" />\n      <button onClick={props.fileUploadHandler}>Upload</button>\n    </div>\n  )\n}\n\nmodule.exports = fdUpload;","import React, { Component } from \"react\";\n\nfunction useForm(props){\n  return(\n    <div id=\"formUploadContainer\">\n      <h2>Upload Using Form</h2>\n      <form action=\"/image\" method=\"POST\" encType=\"multipart/form-data\" id=\"form\">\n        <input onChange={props.handleChange} type=\"file\" name=\"image101\" />\n        <input type=\"text\" name=\"test\" />\n        <input type=\"submit\" value=\"submit\" name=\"testphoto\" />\n      </form>\n    </div>\n  )\n}\n\nmodule.exports = useForm;\n","console.log(\" HELLO PARCEL \");\nimport React, {Component} from 'react';\nimport ReactDOM from \"react-dom\";\n\nconst FormDataConatiner = require(\"./components/formdataupload/formdataupload\");\nconst FormConatiner = require(\"./components/formupload/formupload\");\n\n class Test extends Component {\n   constructor(props) {\n     super(props);\n     this.state = {\n       uploaded: false,\n       file: null,\n       filename: null,\n     };\n     this.fileUploadHandler = this.fileUploadHandler.bind(this);\n     this.handleChange = this.handleChange.bind(this);\n   }\n\n   fileUploadHandler() {\n     let fd = new FormData();\n     fd.append(\"image201\", this.state.file, this.state.file.name);\n\n     //add text for fun\n     fd.append(\"random\", \"text\");\n\n     //create fetch request now\n     fetch(\"/dynamic-image\", {\n       method: \"POST\",\n       data: fd,\n       body: fd,\n     })\n       .then((res) => {\n         //update state for image upload\n         this.setState({ uploaded: true });\n       })\n       .catch((e) => console.log(\"ERROR \", e));\n   }\n\n   handleChange(event) {\n     this.setState({ file: event.target.files[0] });\n   }\n\n   render() {\n     return (\n       <div id='main-content'>\n         {/*create file upload using form element*/}\n        < FormConatiner handleChange={this.handleChange}/>\n\n         {/*create file upload without html form element*/}\n        < FormDataConatiner handleChange={this.handleChange} fileUploadHandler={this.fileUploadHandler}/ >\n       </div>\n     );\n   }\n }  \n\nReactDOM.render(<Test />, document.getElementById(\"app\"));\n"]}